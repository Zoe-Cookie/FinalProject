Microsoft (R) Macro Assembler Version 14.29.30152.0	    12/18/23 13:09:02
main.asm						     Page 1 - 1


				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				INCLUDE macros.inc
			      C .NOLIST
			      C .LIST
			      C 

				getScore PROTO
				role_up PROTO		
				role_down PROTO
				move_obstacle PROTO

 00000000			.data
 = 00000064			Ground = 100 ;the length of ground
 00000000 00000000		outHandle HANDLE ?
 00000004 00000000		cellsWritten DWORD ?
 00000008 000B 0010		rolePos COORD <11,16>   ;initialize position of role
 0000000C 000B 0019		groundPos COORD <11,25> ;initialize position of ground
 00000010 006E 0018		obsPos COORD <110,24>	;initialize position of obstacle
 00000014 000B 0018		obsBound COORD <11,24>
 00000018  00000064 [		buffer BYTE Ground DUP(44h)							;character types
	    44
	   ]
 0000007C 000E 0000		attributes WORD 0Eh, 0h, Ground DUP(22h), 11h		;colors
	   00000064 [
	    0022
	   ] 0011
 0000014A E5 B0 8F E9 A6	titleStr BYTE "小馬快快跑",0
	   AC E5 BF AB E5
	   BF AB E8 B7 91
	   00
 0000015A 00000096		drawDelay DWORD 150	;to draw obstacle with a delay
 0000015E 00000000		startTime DWORD ?   ;
 00000162 006E 0001		curPos COORD <110,1>
 = 00000010			role_up_Y = 16		;用於判斷有沒有跳起來

				;小馬顏色
 00000166  00000006 [		attribute1 WORD 6 DUP(0h), 66h, 0h, 66h, 0h
	    0000
	   ] 0066 0000
	   0066 0000
 0000017A  00000006 [		attribute2 WORD 6 DUP(0h), 66h, 2 DUP(88h), 0h
	    0000
	   ] 0066
	   00000002 [
	    0088
	   ] 0000
 0000018E  00000005 [		attribute3 WORD 5 DUP(0h), 88h, 11h, 66h, 11h, 0h
	    0000
	   ] 0088 0011
	   0066 0011 0000
 000001A2  00000005 [		attribute4 WORD 5 DUP(0h), 66h, 4 DUP(66h)
	    0000
	   ] 0066
	   00000004 [
	    0066
	   ]
 000001B6 0088			attribute5 WORD 88h, 4 DUP(0h), 88h,  2 DUP(66h), 2 DUP(0h)
	   00000004 [
	    0000
	   ] 0088
	   00000002 [
	    0066
	   ]
	   00000002 [
	    0000
	   ]
 000001CA  00000002 [		attribute6 WORD 2 DUP(88h), 6 DUP(66h), 2 DUP(0h)
	    0088
	   ]
	   00000006 [
	    0066
	   ]
	   00000002 [
	    0000
	   ]
 000001DE  00000002 [		attribute7 WORD 2 DUP(0h), 7 DUP(66h), 0h
	    0000
	   ]
	   00000007 [
	    0066
	   ] 0000
 000001F2  00000002 [		attribute8 WORD 2 DUP(0h), 66h, 3 DUP(0h), 66h, 0h, 77h, 0h
	    0000
	   ] 0066
	   00000003 [
	    0000
	   ] 0066 0000
	   0077 0000
 00000206  00000002 [		attribute9 WORD 2 DUP(0h), 77h, 3 DUP(0h), 77h, 3 DUP(0h)
	    0000
	   ] 0077
	   00000003 [
	    0000
	   ] 0077
	   00000003 [
	    0000
	   ]
				;覆蓋小馬顏色
 0000021A  0000000A [		attribute_black WORD 10 DUP(0h)
	    0000
	   ]

				;障礙物顏色
 0000022E  00000003 [		attributeA WORD 3 DUP(44h)
	    0044
	   ]
 00000234  00000003 [		attributeB WORD 3 DUP(44h)
	    0044
	   ]
 0000023A  00000003 [		attributeC WORD 3 DUP(44h)
	    0044
	   ]

 00000000			.code
 00000000			main PROC
					;set console title
					INVOKE SetConsoleTitle, ADDR titleStr

					; Get the console ouput handle
					INVOKE GetStdHandle, STD_OUTPUT_HANDLE
 00000011  A3 00000000 R		mov outHandle, eax	; save console handle
 00000016  E8 00000000 E		call Clrscr	;clear screen

					; Set the role to (11,10):
					FORC num, <123456789>
						INVOKE WriteConsoleOutputAttribute, 
							outHandle, 
							ADDR attribute&num, 
							10, 
							rolePos, 
							ADDR cellsWritten
						INVOKE WriteConsoleOutputCharacter, 
							outHandle, 
							ADDR buffer, 
							10, 
							rolePos, 
							ADDR cellsWritten
						inc rolePos.Y
					ENDM
 00000055  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 00000096  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 000000D7  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 00000118  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 00000159  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 0000019A  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 000001DB  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 0000021C  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 0000025D  66| FF 05	     1			inc rolePos.Y
	   0000000A R

 00000264  66| 83 2D			sub rolePos.Y, 9
	   0000000A R 09

					;draw the ground
					INVOKE WriteConsoleOutputAttribute, 
							outHandle, 
							ADDR attributes+4, 
							Ground, 
							groundPos, 
							ADDR cellsWritten
					; Write character codes to "D"
					INVOKE WriteConsoleOutputCharacter, 
							outHandle, 
							ADDR buffer, 
							Ground, 
							groundPos, 
							ADDR cellsWritten
					;得到開始時間
					INVOKE SetConsoleCursorPosition, 
							outHandle, 
							curPos
					INVOKE GetTickCount ; get starting tick count
 000002BC  A3 0000015E R		mov startTime,eax ; save it
					;顯示零
 000002C1  B8 00000000			mov eax,0
 000002C6  E8 00000000 E		call WriteDec ; display it

				;要先判斷有沒有輸入	
					
				;Start moving	
 000002CB			PLAY:
					;用ReadKey可以不用等待讀取輸入，但輸入不限於空白鍵
 000002CB  E8 00000000 E		call ReadKey
 000002D0  74 0F			jz   nokeyPressed      ; no key pressed
					;不可連續跳兩下
					.IF rolePos.Y == 16
 000002DC  E8 00000077				call role_up
					.ENDIF


 000002E1			nokeyPressed:
					;印出分數
					INVOKE getScore
					;use delay to let obstacle look moving
					INVOKE Sleep, drawDelay		
					;如果角色跳起來，就讓他往下 
					;若現在Y座標小於一開始的位置，呼叫role_down
					.IF rolePos.Y < role_up_Y
 000002FB  E8 00000502				call role_down


					.ENDIF

 00000300  E8 000009A7			call move_obstacle

 00000305  66| A1			mov ax,rolePos.x
	   00000008 R
					;if obstacle and role in the same position, stop moving
					;.IF obsPos.X == ax
					;	jmp END_PLAY
					;.ENDIF

					;無限輪迴
					
 0000030B  EB BE			jmp PLAY
 0000030D			END_PLAY:
					exit
 00000314			main ENDP

 00000314			getScore PROC, 
					;用經過的milliseconds當作分數
					;讓數字從相同地方印出
					INVOKE SetConsoleCursorPosition, 
							outHandle, 
							curPos
					INVOKE GetTickCount ; get new tick count
 0000032A  3B 05 0000015E R		cmp eax,startTime	; lower than starting one
 00000330  72 19			jb errorTime
 00000332  2B 05 0000015E R		sub eax,startTime	; get elapsed milliseconds
					;除以16讓數字增加幅度變小
 00000338  BA 00000000			mov edx, 0h			
 0000033D  B9 00000010			mov ecx, 10h
 00000342  F7 F1			div ecx
 00000344  E8 00000000 E		call WriteDec ; display it
 00000349  EB 0C			jmp quit
 0000034B			errorTime:
					mWrite "Reach Highest Goal!"
 00000240		     1		.data		
 00000240 52 65 61 63 68     1		??0000 BYTE "Reach Highest Goal!",0	
	   20 48 69 67 68
	   65 73 74 20 47
	   6F 61 6C 21 00
 0000034B		     1		.code
 0000034B  52		     1		push	edx
 0000034C  BA 00000240 R     1		mov	edx,OFFSET ??0000
 00000351  E8 00000000 E     1		call	WriteString
 00000356  5A		     1		pop	edx
 00000357			quit:
 00000357  C3				ret
 00000358			getScore ENDP

 00000358			role_up PROC
				;向上一格半多
					;erase old position
					FORC num, <123456789>
						INVOKE WriteConsoleOutputAttribute, 
							outHandle, 
							ADDR attribute_black, 
							10, 
							rolePos, 
							ADDR cellsWritten
						INVOKE WriteConsoleOutputCharacter, 
							outHandle, 
							ADDR buffer, 
							10, 
							rolePos, 
							ADDR cellsWritten
						inc rolePos.Y
					ENDM
 00000392  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 000003D3  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 00000414  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 00000455  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 00000496  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 000004D7  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 00000518  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 00000559  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 0000059A  66| FF 05	     1			inc rolePos.Y
	   0000000A R

					;draw a new one
 000005A1  66| 83 2D			sub rolePos.Y, 15
	   0000000A R 0F
 000005A9  66| FF 0D			dec rolePos.Y
	   0000000A R

					FORC num, <123456789>
						INVOKE WriteConsoleOutputAttribute, 
							outHandle, 
							ADDR attribute&num, 
							10, 
							rolePos, 
							ADDR cellsWritten
						INVOKE WriteConsoleOutputCharacter, 
							outHandle, 
							ADDR buffer, 
							10, 
							rolePos, 
							ADDR cellsWritten
						inc rolePos.Y
					ENDM
 000005EA  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 0000062B  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 0000066C  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 000006AD  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 000006EE  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 0000072F  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 00000770  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 000007B1  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 000007F2  66| FF 05	     1			inc rolePos.Y
	   0000000A R

 000007F9  66| 83 2D			sub rolePos.Y, 9
	   0000000A R 09
 00000801  C3				ret
 00000802			role_up ENDP

 00000802			role_down PROC
				;向下一格
					;erase old position
					FORC num, <123456789>
						INVOKE WriteConsoleOutputAttribute, 
							outHandle, 
							ADDR attribute_black, 
							10, 
							rolePos, 
							ADDR cellsWritten
						INVOKE WriteConsoleOutputCharacter, 
							outHandle, 
							ADDR buffer, 
							10, 
							rolePos, 
							ADDR cellsWritten
						inc rolePos.Y
					ENDM
 0000083C  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 0000087D  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 000008BE  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 000008FF  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 00000940  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 00000981  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 000009C2  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 00000A03  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 00000A44  66| FF 05	     1			inc rolePos.Y
	   0000000A R

					;draw a new one
 00000A4B  66| 83 2D			sub rolePos.Y, 9
	   0000000A R 09
 00000A53  66| FF 05			inc rolePos.Y
	   0000000A R

					FORC num, <123456789>
						INVOKE WriteConsoleOutputAttribute, 
							outHandle, 
							ADDR attribute&num, 
							10, 
							rolePos, 
							ADDR cellsWritten
						INVOKE WriteConsoleOutputCharacter, 
							outHandle, 
							ADDR buffer, 
							10, 
							rolePos, 
							ADDR cellsWritten
						inc rolePos.Y
					ENDM
 00000A94  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 00000AD5  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 00000B16  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 00000B57  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 00000B98  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 00000BD9  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 00000C1A  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 00000C5B  66| FF 05	     1			inc rolePos.Y
	   0000000A R
 00000C9C  66| FF 05	     1			inc rolePos.Y
	   0000000A R

 00000CA3  66| 83 2D			sub rolePos.Y, 9
	   0000000A R 09
 00000CAB  C3				ret
 00000CAC			role_down ENDP

 00000CAC			move_obstacle PROC
					;draw obstacle with color red
					FORC num, <ABC>
						INVOKE WriteConsoleOutputAttribute, 
							outHandle, 
							ADDR attribute&num, 
							3, 
							obsPos, 
							ADDR cellsWritten
						INVOKE WriteConsoleOutputCharacter, 
							outHandle, 
							ADDR buffer, 
							3, 
							obsPos, 
							ADDR cellsWritten
						dec obsPos.Y			;每次畫一列，往上畫
					ENDM
 00000CE6  66| FF 0D	     1			dec obsPos.Y			;每次畫一列，往上畫
	   00000012 R
 00000D27  66| FF 0D	     1			dec obsPos.Y			;每次畫一列，往上畫
	   00000012 R
 00000D68  66| FF 0D	     1			dec obsPos.Y			;每次畫一列，往上畫
	   00000012 R
					;back to previous position Y回到第一列，X倒退三行
 00000D6F  66| 83 05			add obsPos.X, 3
	   00000010 R 03
 00000D77  66| 83 05			add obsPos.Y, 3
	   00000012 R 03
					;erase obstacle 
					FORC num, <ABC>
						INVOKE WriteConsoleOutputAttribute, 
							outHandle, 
							ADDR attribute_black, 
							3, 
							obsPos, 
							ADDR cellsWritten
						INVOKE WriteConsoleOutputCharacter, 
							outHandle, 
							ADDR buffer, 
							3, 
							obsPos, 
							ADDR cellsWritten
						dec obsPos.Y
					ENDM
 00000DB9  66| FF 0D	     1			dec obsPos.Y
	   00000012 R
 00000DFA  66| FF 0D	     1			dec obsPos.Y
	   00000012 R
 00000E3B  66| FF 0D	     1			dec obsPos.Y
	   00000012 R
					;to the next position Y回到第一列，X前進六行
 00000E42  66| 83 2D			sub obsPos.X, 6
	   00000010 R 06
 00000E4A  66| 83 05			add obsPos.Y, 3
	   00000012 R 03
					;若障礙物到達末端，從頭開始
					.IF obsPos.X == 5
 00000E60  66| 83 05				add obsPos.X, 3
	   00000010 R 03
						FORC num, <ABC>
						INVOKE WriteConsoleOutputAttribute, 
							outHandle, 
							ADDR attribute_black, 
							3, 
							obsPos, 
							ADDR cellsWritten
						INVOKE WriteConsoleOutputCharacter, 
							outHandle, 
							ADDR buffer, 
							3, 
							obsPos, 
							ADDR cellsWritten
						dec obsPos.Y
					ENDM
 00000EA2  66| FF 0D	     1			dec obsPos.Y
	   00000012 R
 00000EE3  66| FF 0D	     1			dec obsPos.Y
	   00000012 R
 00000F24  66| FF 0D	     1			dec obsPos.Y
	   00000012 R
 00000F2B  66| C7 05			mov obsPos.X, 110 
	   00000010 R
	   006E
 00000F34  66| 83 05			add obsPos.Y, 3
	   00000012 R 03
					.ENDIF
 00000F3C  C3				ret
 00000F3D			move_obstacle ENDP

				END main
Microsoft (R) Macro Assembler Version 14.29.30152.0	    12/18/23 13:09:02
main.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

IsDefined  . . . . . . . . . . .	Func
Startup  . . . . . . . . . . . .	Proc
mDumpMem . . . . . . . . . . . .	Proc
mDump  . . . . . . . . . . . . .	Proc
mGotoxy  . . . . . . . . . . . .	Proc
mReadString  . . . . . . . . . .	Proc
mShowRegister  . . . . . . . . .	Proc
mShow  . . . . . . . . . . . . .	Proc
mWriteLn . . . . . . . . . . . .	Proc
mWriteSpace  . . . . . . . . . .	Proc
mWriteString . . . . . . . . . .	Proc
mWrite . . . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000254 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000F3D Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
getScore . . . . . . . . . . . .	P Near	 00000314 _TEXT	Length= 00000044 Public STDCALL
  errorTime  . . . . . . . . . .	L Near	 0000034B _TEXT	
  quit . . . . . . . . . . . . .	L Near	 00000357 _TEXT	
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000314 Public STDCALL
  PLAY . . . . . . . . . . . . .	L Near	 000002CB _TEXT	
  nokeyPressed . . . . . . . . .	L Near	 000002E1 _TEXT	
  END_PLAY . . . . . . . . . . .	L Near	 0000030D _TEXT	
move_obstacle  . . . . . . . . .	P Near	 00000CAC _TEXT	Length= 00000291 Public STDCALL
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
role_down  . . . . . . . . . . .	P Near	 00000802 _TEXT	Length= 000004AA Public STDCALL
role_up  . . . . . . . . . . . .	P Near	 00000358 _TEXT	Length= 000004AA Public STDCALL
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

??0000 . . . . . . . . . . . . .	Byte	 00000240 _DATA	
@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
Ground . . . . . . . . . . . . .	Number	 00000064h   
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
attribute1 . . . . . . . . . . .	Word	 00000166 _DATA	
attribute2 . . . . . . . . . . .	Word	 0000017A _DATA	
attribute3 . . . . . . . . . . .	Word	 0000018E _DATA	
attribute4 . . . . . . . . . . .	Word	 000001A2 _DATA	
attribute5 . . . . . . . . . . .	Word	 000001B6 _DATA	
attribute6 . . . . . . . . . . .	Word	 000001CA _DATA	
attribute7 . . . . . . . . . . .	Word	 000001DE _DATA	
attribute8 . . . . . . . . . . .	Word	 000001F2 _DATA	
attribute9 . . . . . . . . . . .	Word	 00000206 _DATA	
attributeA . . . . . . . . . . .	Word	 0000022E _DATA	
attributeB . . . . . . . . . . .	Word	 00000234 _DATA	
attributeC . . . . . . . . . . .	Word	 0000023A _DATA	
attribute_black  . . . . . . . .	Word	 0000021A _DATA	
attributes . . . . . . . . . . .	Word	 0000007C _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
buffer . . . . . . . . . . . . .	Byte	 00000018 _DATA	
cellsWritten . . . . . . . . . .	DWord	 00000004 _DATA	
curPos . . . . . . . . . . . . .	COORD	 00000162 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
drawDelay  . . . . . . . . . . .	DWord	 0000015A _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
groundPos  . . . . . . . . . . .	COORD	 0000000C _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
obsBound . . . . . . . . . . . .	COORD	 00000014 _DATA	
obsPos . . . . . . . . . . . . .	COORD	 00000010 _DATA	
outHandle  . . . . . . . . . . .	DWord	 00000000 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
rolePos  . . . . . . . . . . . .	COORD	 00000008 _DATA	
role_up_Y  . . . . . . . . . . .	Number	 00000010h   
startTime  . . . . . . . . . . .	DWord	 0000015E _DATA	
titleStr . . . . . . . . . . . .	Byte	 0000014A _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
